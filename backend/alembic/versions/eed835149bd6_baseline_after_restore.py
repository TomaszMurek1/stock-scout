"""baseline after restore

Revision ID: eed835149bd6
Revises: 
Create Date: 2025-03-25 10:44:17.275459

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eed835149bd6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company_esg_data',
    sa.Column('esg_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('total_esg_score', sa.Float(), nullable=True),
    sa.Column('environment_score', sa.Float(), nullable=True),
    sa.Column('social_score', sa.Float(), nullable=True),
    sa.Column('governance_score', sa.Float(), nullable=True),
    sa.Column('highest_controversy', sa.Integer(), nullable=True),
    sa.Column('rating_year', sa.Integer(), nullable=True),
    sa.Column('rating_month', sa.Integer(), nullable=True),
    sa.Column('peer_group', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.PrimaryKeyConstraint('esg_id')
    )
    op.drop_table('stock_price_ndx')
    op.drop_table('company_indexes')
    op.drop_table('technical_signals')
    op.add_column('company_financial_history', sa.Column('ebit', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('diluted_eps', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('basic_eps', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('operating_income', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('free_cash_flow', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('capital_expenditure', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('interest_expense', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('interest_income', sa.Float(), nullable=True))
    op.add_column('company_financial_history', sa.Column('depreciation_amortization', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('ebit', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('diluted_eps', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('basic_eps', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('free_cash_flow', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('capital_expenditure', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('interest_expense', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('interest_income', sa.Float(), nullable=True))
    op.add_column('company_financials', sa.Column('depreciation_amortization', sa.Float(), nullable=True))
    op.add_column('company_market_data', sa.Column('year_change', sa.Float(), nullable=True))
    op.add_column('company_market_data', sa.Column('fifty_day_average', sa.Float(), nullable=True))
    op.add_column('company_market_data', sa.Column('two_hundred_day_average', sa.Float(), nullable=True))
    op.add_column('company_market_data', sa.Column('shares_outstanding', sa.Float(), nullable=True))
    op.drop_column('company_market_data', 'forward_pe')
    op.drop_column('company_market_data', 'trailing_pe')
    op.create_unique_constraint('_company_market_date_uc', 'stock_price_history', ['company_id', 'market_id', 'date'])
    op.create_index('idx_stockpricehistory_date', 'stock_price_history', ['date'], unique=False)
    op.create_index(op.f('ix_stock_price_history_date'), 'stock_price_history', ['date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_price_history_date'), table_name='stock_price_history')
    op.drop_index('idx_stockpricehistory_date', table_name='stock_price_history')
    op.drop_constraint('_company_market_date_uc', 'stock_price_history', type_='unique')
    op.add_column('company_market_data', sa.Column('trailing_pe', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('company_market_data', sa.Column('forward_pe', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('company_market_data', 'shares_outstanding')
    op.drop_column('company_market_data', 'two_hundred_day_average')
    op.drop_column('company_market_data', 'fifty_day_average')
    op.drop_column('company_market_data', 'year_change')
    op.drop_column('company_financials', 'depreciation_amortization')
    op.drop_column('company_financials', 'interest_income')
    op.drop_column('company_financials', 'interest_expense')
    op.drop_column('company_financials', 'capital_expenditure')
    op.drop_column('company_financials', 'free_cash_flow')
    op.drop_column('company_financials', 'basic_eps')
    op.drop_column('company_financials', 'diluted_eps')
    op.drop_column('company_financials', 'ebit')
    op.drop_column('company_financial_history', 'depreciation_amortization')
    op.drop_column('company_financial_history', 'interest_income')
    op.drop_column('company_financial_history', 'interest_expense')
    op.drop_column('company_financial_history', 'capital_expenditure')
    op.drop_column('company_financial_history', 'free_cash_flow')
    op.drop_column('company_financial_history', 'operating_income')
    op.drop_column('company_financial_history', 'basic_eps')
    op.drop_column('company_financial_history', 'diluted_eps')
    op.drop_column('company_financial_history', 'ebit')
    op.create_table('technical_signals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('market_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('signal_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('signal_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('computed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], name='technical_signals_company_id_fkey'),
    sa.ForeignKeyConstraint(['market_id'], ['markets.market_id'], name='technical_signals_market_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='technical_signals_pkey'),
    sa.UniqueConstraint('company_id', 'market_id', 'signal_type', name='_company_market_signal_uc')
    )
    op.create_table('company_indexes',
    sa.Column('company_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('index_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('company_id', 'index_id', name='idx_16395_sqlite_autoindex_company_indexes_1')
    )
    op.create_table('stock_price_ndx',
    sa.Column('data_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('market_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('open', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('high', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('low', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('close', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('adjusted_close', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], name='stock_price_history_company_id_fkey'),
    sa.ForeignKeyConstraint(['market_id'], ['markets.market_id'], name='stock_price_history_market_id_fkey'),
    sa.PrimaryKeyConstraint('data_id', 'market_id', name='stock_price_ndx_pkey')
    )
    op.drop_table('company_esg_data')
    # ### end Alembic commands ###
