version: "3.9"

services:
  db:
    image: postgres:15
    container_name: prod_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_prod_data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "stockscout_user", "-d", "stock_scout_db"]
        interval: 5s
        timeout: 3s
        retries: 5
        start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prod_backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --log-level debug
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${VITE_API_URL} 
    container_name: prod_frontend
    depends_on:
      - backend
    expose:
      - "80"

  nginx:
    image: nginx:stable-alpine
    container_name: prod_nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db_prod_data:
